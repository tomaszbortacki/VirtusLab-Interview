{"version":3,"sources":["Api.tsx","components/Loading.tsx","components/Person.tsx","App.tsx","index.tsx"],"names":["API","Loading","zoom","className","style","Person","person","titleBase","setTitleBase","name","birth_year","gender","height","films","useState","personActive","setPersonActive","titles","setTitles","loading","setLoading","end","setEnd","fetchPersonData","a","film","exist","reduce","curr","apiUrl","prevState","axios","get","replace","window","location","protocol","then","res","title","data","catch","err","console","log","onClick","map","key","App","last","setLast","numberOfPeople","setNumberOfPeople","people","setPeople","fetchPeopleData","number","i","currentPerson","error","useEffect","Container","require","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NACeA,EADK,yB,eCcLC,EAZC,SAAC,GAAkB,IAAD,IAAfC,YAAe,MAAR,EAAQ,EAChC,OACE,qBAAKC,UAAU,mBAAmBC,MAAO,CAAEF,QAA3C,SACE,sBAAKC,UAAU,UAAf,UACE,wBACA,wBACA,8B,iBCqFOE,EAxFA,SAAC,GAQT,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,UACAC,EAKI,EALJA,aAMQC,EAA4CH,EAA5CG,KAAMC,EAAsCJ,EAAtCI,WAAYC,EAA0BL,EAA1BK,OAAQC,EAAkBN,EAAlBM,OAAQC,EAAUP,EAAVO,MADtC,EAEoCC,oBAAkB,GAFtD,mBAEGC,EAFH,KAEiBC,EAFjB,OAGwBF,mBAAmB,IAH3C,mBAGGG,EAHH,KAGWC,EAHX,OAI0BJ,oBAAkB,GAJ5C,mBAIGK,EAJH,KAIYC,EAJZ,OAKkBN,oBAAkB,GALpC,mBAKGO,EALH,KAKQC,EALR,KAOEC,EAAe,uCAAG,gCAAAC,EAAA,0DAClBH,IAAON,EADW,+DAGHF,GAHG,aAAAW,EAAA,oCAAAA,EAAA,yDAGXC,EAHW,UAIdC,EAAgBnB,EAAUoB,QAC9B,SAACC,EAAD,OAAiBC,EAAjB,EAAiBA,OAAQpB,EAAzB,EAAyBA,KAAzB,OACEoB,IAAWJ,EAAOhB,EAAOmB,IAC3B,KAPkB,gBAUTV,GAAU,SAACY,GAAD,4BAAmBA,GAAnB,CAA8BJ,OAV/B,sCAYZK,IACHC,IAAIP,EAAKQ,QAAQ,OAAQC,OAAOC,SAASC,WACzCC,MAAK,SAACC,GACL,IAAMC,EAAQD,EAAIE,KAAKD,MACvB/B,GAAa,SAACsB,GAAD,4BACRA,GADQ,CAEX,CAAED,OAAQJ,EAAMhB,KAAM8B,QAExBrB,GAAU,SAACY,GAAD,4BAAmBA,GAAnB,CAA8BS,UAEzCE,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAvBE,2QA0BtBpB,GAAO,GACPF,GAAW,GA3BW,gEAAH,qDA8BrB,OACE,0BAASjB,UAAWY,EAAe,wBAA0B,SAA7D,UACE,qBACEZ,UAAU,iBACV0C,QAAS,WACP7B,GAAiBD,GACjBQ,KAJJ,UAOE,qBAAIgB,MAAO9B,EAAX,UACE,yCACCA,KAEH,qBAAI8B,MAAO7B,EAAX,UACE,8CACCA,KAEH,qBAAI6B,MAAO5B,EAAX,UACE,2CACCA,KAEH,6BACE,oDAGJ,yBAASR,UAAU,eAAnB,SACE,0BAASA,UAAU,eAAnB,UACE,uCAAUO,EAAWuB,QAAQ,MAAO,OACpC,0CAAarB,EAAb,QACA,wCAAWO,EAAU,cAAC,EAAD,CAASjB,KAAM,KAAU,MAC9C,6BACGe,EACGA,EAAO6B,KAAI,SAACP,EAAOQ,GACjB,OAAO,6BAAeR,GAANQ,MAElB,cCMDC,MA5Ef,WAAgB,IAAD,EACWlC,oBAAkB,GAD7B,mBACNmC,EADM,KACAC,EADA,OAE+BpC,mBAAiB,GAFhD,mBAENqC,EAFM,KAEUC,EAFV,OAGetC,mBAAiB,IAHhC,mBAGNuC,EAHM,KAGEC,EAHF,OAIiBxC,oBAAkB,GAJnC,mBAINK,EAJM,KAIGC,EAJH,OAKqBN,mBAAyB,IAL9C,mBAKNP,EALM,KAKKC,EALL,KAOP+C,EAAe,uCAAG,0CAAA/B,EAAA,sDAAOgC,EAAP,+BAAgB,GAC7BC,EAAIN,EADS,YACOM,EAAIN,EAAiBK,GAD5B,gCAEdzB,IACHC,IADG,UACIhC,EADJ,kBACiByD,EADjB,MAEHpB,MAAK,SAACC,GAAS,IAAD,EACuCA,EAAIE,KAClDkB,EAAiC,CACrCjD,KAHW,EACLA,KAGNC,WAJW,EACCA,WAIZC,OALW,EACaA,OAKxBC,OANW,EACqBA,OAMhCC,MAPW,EAC6BA,OAQ1CyC,GAAU,SAACxB,GAAD,4BAAwBA,GAAxB,CAAmC4B,OAC7CR,GAAQ,MAETT,OAAM,SAACC,GACNQ,GAAQ,GACRP,QAAQgB,MAAMjB,MAlBE,OACoCe,IADpC,sBAqBtBL,EAAkBD,EAAiBK,GACnCpC,GAAW,GAtBW,4CAAH,qDA6BrB,OAJAwC,qBAAU,WACRL,MACC,IAGD,yBAASpD,UAAU,OAAnB,SACE,eAAC0D,EAAA,EAAD,WACE,yBAAS1D,UAAU,YAAnB,SACE,uDAEF,0BAASA,UAAU,aAAnB,UACGkD,EACGA,EAAOP,KAAI,SAACxC,EAAayC,GACvB,OACE,cAAC,EAAD,CACEzC,OAAQA,EAERC,UAAWA,EACXC,aAAcA,GAFTuC,MAMX,GACH5B,EAAU,cAAC,EAAD,IAAc,MAE3B,yBAAShB,UAAU,eAAnB,SACI8C,EAUA,GATA,wBACEJ,QAAS,WACPzB,GAAW,GACXmC,EAAgB,IAHpB,SAME,2D,MC3EdO,EAAQ,IAAUC,SAElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ec7a4f73.chunk.js","sourcesContent":["const API: string = \"https://swapi.dev/api/\";\r\nexport default API;\r\n","import React from \"react\";\r\n\r\nconst Loading = ({ zoom = 1 }) => {\r\n  return (\r\n    <div className=\"loading__wrapper\" style={{ zoom }}>\r\n      <div className=\"loading\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useState } from \"react\";\r\nimport { PersonInterface, TitleInterface } from \"./Interfaces\";\r\nimport Loading from \"./Loading\";\r\nimport axios from \"axios\";\r\n\r\nconst Person = ({\r\n  person,\r\n  titleBase,\r\n  setTitleBase,\r\n}: {\r\n  person: PersonInterface;\r\n  titleBase: TitleInterface;\r\n  setTitleBase: any;\r\n}) => {\r\n  const { name, birth_year, gender, height, films } = person;\r\n  const [personActive, setPersonActive] = useState<boolean>(false);\r\n  const [titles, setTitles] = useState<string[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [end, setEnd] = useState<boolean>(false);\r\n\r\n  const fetchPersonData = async () => {\r\n    if (end || personActive) return;\r\n\r\n    for (const film of films) {\r\n      const exist: string = titleBase.reduce(\r\n        (curr: string, { apiUrl, name }: { apiUrl: string; name: string }) =>\r\n          apiUrl === film ? name : curr,\r\n        \"\"\r\n      );\r\n\r\n      if (exist) setTitles((prevState) => [...prevState, exist]);\r\n      else\r\n        await axios\r\n          .get(film.replace(\"http\", window.location.protocol))\r\n          .then((res) => {\r\n            const title = res.data.title;\r\n            setTitleBase((prevState: any) => [\r\n              ...prevState,\r\n              { apiUrl: film, name: title },\r\n            ]);\r\n            setTitles((prevState) => [...prevState, title]);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n    }\r\n    setEnd(true);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <section className={personActive ? \"person person--active\" : \"person\"}>\r\n      <ul\r\n        className=\"person__basics\"\r\n        onClick={() => {\r\n          setPersonActive(!personActive);\r\n          fetchPersonData();\r\n        }}\r\n      >\r\n        <li title={name}>\r\n          <span>Name:</span>\r\n          {name}\r\n        </li>\r\n        <li title={birth_year}>\r\n          <span>Birth year</span>\r\n          {birth_year}\r\n        </li>\r\n        <li title={gender}>\r\n          <span>Gender:</span>\r\n          {gender}\r\n        </li>\r\n        <li>\r\n          <div>ðŸ¡»</div>\r\n        </li>\r\n      </ul>\r\n      <section className=\"person__more\">\r\n        <section className=\"person__desc\">\r\n          <h3>Age: {birth_year.replace(\"BBY\", \"\")}</h3>\r\n          <h3>Height: {height}cm</h3>\r\n          <h3>Films:{loading ? <Loading zoom={0.4} /> : \"\"}</h3>\r\n          <ul>\r\n            {titles\r\n              ? titles.map((title, key) => {\r\n                  return <li key={key}>{title}</li>;\r\n                })\r\n              : \"\"}\r\n          </ul>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./css/style.scss\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport {\r\n  PersonInterface,\r\n  PeopleInterface,\r\n  TitleInterface,\r\n} from \"./components/Interfaces\";\r\nimport API from \"./Api\";\r\nimport Person from \"./components/Person\";\r\nimport Loading from \"./components/Loading\";\r\nimport axios from \"axios\";\r\n\r\ntype People = Array<PeopleInterface>;\r\n\r\nfunction App() {\r\n  const [last, setLast] = useState<boolean>(false);\r\n  const [numberOfPeople, setNumberOfPeople] = useState<number>(1);\r\n  const [people, setPeople] = useState<People>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [titleBase, setTitleBase] = useState<TitleInterface>([]);\r\n\r\n  const fetchPeopleData = async (number = 10) => {\r\n    for (let i = numberOfPeople; i < numberOfPeople + number; i++) {\r\n      await axios\r\n        .get(`${API}people/${i}/`)\r\n        .then((res) => {\r\n          const { name, birth_year, gender, height, films } = res.data;\r\n          const currentPerson: PersonInterface = {\r\n            name,\r\n            birth_year,\r\n            gender,\r\n            height,\r\n            films,\r\n          };\r\n          setPeople((prevState: any) => [...prevState, currentPerson]);\r\n          setLast(false);\r\n        })\r\n        .catch((err) => {\r\n          setLast(true);\r\n          console.error(err);\r\n        });\r\n    }\r\n    setNumberOfPeople(numberOfPeople + number);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPeopleData();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"main\">\r\n      <Container>\r\n        <section className=\"main__top\">\r\n          <h1>Star Wars Challenge</h1>\r\n        </section>\r\n        <section className=\"main__list\">\r\n          {people\r\n            ? people.map((person: any, key: number) => {\r\n                return (\r\n                  <Person\r\n                    person={person}\r\n                    key={key}\r\n                    titleBase={titleBase}\r\n                    setTitleBase={setTitleBase}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n          {loading ? <Loading /> : \"\"}\r\n        </section>\r\n        <section className=\"main__bottom\">\r\n          {!last ? (\r\n            <button\r\n              onClick={() => {\r\n                setLoading(true);\r\n                fetchPeopleData(5);\r\n              }}\r\n            >\r\n              <span>Load more (5)</span>\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </section>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}